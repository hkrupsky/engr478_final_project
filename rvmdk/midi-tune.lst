L 1 "midifile\visual-studio\Debug\midi-tune.c"
N// c:\Users\jspicer\Downloads\overworld.mid
N#include "midi.h"
L 1 ".\midi.h" 1
N// Purpose: Contains MIDI data types.
N// Hardware:  TM4C123 Tiva board
N#include <stdint.h>
L 1 "E:\Keil\ARM\ARMCC\Bin\..\include\stdint.h" 1
N/* Copyright (C) ARM Ltd., 1999,2014 */
N/* All rights reserved */
N
N/*
N * RCS $Revision$
N * Checkin $Date$
N * Revising $Author: agrant $
N */
N
N#ifndef __stdint_h
N#define __stdint_h
N#define __ARMCLIB_VERSION 5060037
N
N  #ifdef __INT64_TYPE__
S    /* armclang predefines '__INT64_TYPE__' and '__INT64_C_SUFFIX__' */
S    #define __INT64 __INT64_TYPE__
N  #else
N    /* armcc has builtin '__int64' which can be used in --strict mode */
N    #define __INT64 __int64
N    #define __INT64_C_SUFFIX__ ll
N  #endif
N  #define __PASTE2(x, y) x ## y
N  #define __PASTE(x, y) __PASTE2(x, y)
N  #define __INT64_C(x)  __ESCAPE__(__PASTE(x, __INT64_C_SUFFIX__))
N  #define __UINT64_C(x)  __ESCAPE__(__PASTE(x ## u, __INT64_C_SUFFIX__))
N  #if defined(__clang__) || (defined(__ARMCC_VERSION) && !defined(__STRICT_ANSI__))
X  #if 0L || (1L && !0L)
N    /* armclang and non-strict armcc allow 'long long' in system headers */
N    #define __LONGLONG long long
N  #else
S    /* strict armcc has '__int64' */
S    #define __LONGLONG __int64
N  #endif
N
N  #ifndef __STDINT_DECLS
N  #define __STDINT_DECLS
N
N    #undef __CLIBNS
N
N    #ifdef __cplusplus
S      namespace std {
S          #define __CLIBNS std::
S          extern "C" {
N    #else
N      #define __CLIBNS
N    #endif  /* __cplusplus */
N
N
N/*
N * 'signed' is redundant below, except for 'signed char' and if
N * the typedef is used to declare a bitfield.
N */
N
N    /* 7.18.1.1 */
N
N    /* exact-width signed integer types */
Ntypedef   signed          char int8_t;
Ntypedef   signed short     int int16_t;
Ntypedef   signed           int int32_t;
Ntypedef   signed       __INT64 int64_t;
Xtypedef   signed       __int64 int64_t;
N
N    /* exact-width unsigned integer types */
Ntypedef unsigned          char uint8_t;
Ntypedef unsigned short     int uint16_t;
Ntypedef unsigned           int uint32_t;
Ntypedef unsigned       __INT64 uint64_t;
Xtypedef unsigned       __int64 uint64_t;
N
N    /* 7.18.1.2 */
N
N    /* smallest type of at least n bits */
N    /* minimum-width signed integer types */
Ntypedef   signed          char int_least8_t;
Ntypedef   signed short     int int_least16_t;
Ntypedef   signed           int int_least32_t;
Ntypedef   signed       __INT64 int_least64_t;
Xtypedef   signed       __int64 int_least64_t;
N
N    /* minimum-width unsigned integer types */
Ntypedef unsigned          char uint_least8_t;
Ntypedef unsigned short     int uint_least16_t;
Ntypedef unsigned           int uint_least32_t;
Ntypedef unsigned       __INT64 uint_least64_t;
Xtypedef unsigned       __int64 uint_least64_t;
N
N    /* 7.18.1.3 */
N
N    /* fastest minimum-width signed integer types */
Ntypedef   signed           int int_fast8_t;
Ntypedef   signed           int int_fast16_t;
Ntypedef   signed           int int_fast32_t;
Ntypedef   signed       __INT64 int_fast64_t;
Xtypedef   signed       __int64 int_fast64_t;
N
N    /* fastest minimum-width unsigned integer types */
Ntypedef unsigned           int uint_fast8_t;
Ntypedef unsigned           int uint_fast16_t;
Ntypedef unsigned           int uint_fast32_t;
Ntypedef unsigned       __INT64 uint_fast64_t;
Xtypedef unsigned       __int64 uint_fast64_t;
N
N    /* 7.18.1.4 integer types capable of holding object pointers */
N#if __sizeof_ptr == 8
X#if 4 == 8
Stypedef   signed       __INT64 intptr_t;
Stypedef unsigned       __INT64 uintptr_t;
N#else
Ntypedef   signed           int intptr_t;
Ntypedef unsigned           int uintptr_t;
N#endif
N
N    /* 7.18.1.5 greatest-width integer types */
Ntypedef   signed     __LONGLONG intmax_t;
Xtypedef   signed     long long intmax_t;
Ntypedef unsigned     __LONGLONG uintmax_t;
Xtypedef unsigned     long long uintmax_t;
N
N
N#if !defined(__cplusplus) || defined(__STDC_LIMIT_MACROS)
X#if !0L || 0L
N
N    /* 7.18.2.1 */
N
N    /* minimum values of exact-width signed integer types */
N#define INT8_MIN                   -128
N#define INT16_MIN                -32768
N#define INT32_MIN          (~0x7fffffff)   /* -2147483648 is unsigned */
N#define INT64_MIN  __INT64_C(~0x7fffffffffffffff) /* -9223372036854775808 is unsigned */
N
N    /* maximum values of exact-width signed integer types */
N#define INT8_MAX                    127
N#define INT16_MAX                 32767
N#define INT32_MAX            2147483647
N#define INT64_MAX  __INT64_C(9223372036854775807)
N
N    /* maximum values of exact-width unsigned integer types */
N#define UINT8_MAX                   255
N#define UINT16_MAX                65535
N#define UINT32_MAX           4294967295u
N#define UINT64_MAX __UINT64_C(18446744073709551615)
N
N    /* 7.18.2.2 */
N
N    /* minimum values of minimum-width signed integer types */
N#define INT_LEAST8_MIN                   -128
N#define INT_LEAST16_MIN                -32768
N#define INT_LEAST32_MIN          (~0x7fffffff)
N#define INT_LEAST64_MIN  __INT64_C(~0x7fffffffffffffff)
N
N    /* maximum values of minimum-width signed integer types */
N#define INT_LEAST8_MAX                    127
N#define INT_LEAST16_MAX                 32767
N#define INT_LEAST32_MAX            2147483647
N#define INT_LEAST64_MAX  __INT64_C(9223372036854775807)
N
N    /* maximum values of minimum-width unsigned integer types */
N#define UINT_LEAST8_MAX                   255
N#define UINT_LEAST16_MAX                65535
N#define UINT_LEAST32_MAX           4294967295u
N#define UINT_LEAST64_MAX __UINT64_C(18446744073709551615)
N
N    /* 7.18.2.3 */
N
N    /* minimum values of fastest minimum-width signed integer types */
N#define INT_FAST8_MIN           (~0x7fffffff)
N#define INT_FAST16_MIN          (~0x7fffffff)
N#define INT_FAST32_MIN          (~0x7fffffff)
N#define INT_FAST64_MIN  __INT64_C(~0x7fffffffffffffff)
N
N    /* maximum values of fastest minimum-width signed integer types */
N#define INT_FAST8_MAX             2147483647
N#define INT_FAST16_MAX            2147483647
N#define INT_FAST32_MAX            2147483647
N#define INT_FAST64_MAX  __INT64_C(9223372036854775807)
N
N    /* maximum values of fastest minimum-width unsigned integer types */
N#define UINT_FAST8_MAX            4294967295u
N#define UINT_FAST16_MAX           4294967295u
N#define UINT_FAST32_MAX           4294967295u
N#define UINT_FAST64_MAX __UINT64_C(18446744073709551615)
N
N    /* 7.18.2.4 */
N
N    /* minimum value of pointer-holding signed integer type */
N#if __sizeof_ptr == 8
X#if 4 == 8
S#define INTPTR_MIN INT64_MIN
N#else
N#define INTPTR_MIN INT32_MIN
N#endif
N
N    /* maximum value of pointer-holding signed integer type */
N#if __sizeof_ptr == 8
X#if 4 == 8
S#define INTPTR_MAX INT64_MAX
N#else
N#define INTPTR_MAX INT32_MAX
N#endif
N
N    /* maximum value of pointer-holding unsigned integer type */
N#if __sizeof_ptr == 8
X#if 4 == 8
S#define UINTPTR_MAX UINT64_MAX
N#else
N#define UINTPTR_MAX UINT32_MAX
N#endif
N
N    /* 7.18.2.5 */
N
N    /* minimum value of greatest-width signed integer type */
N#define INTMAX_MIN  __ESCAPE__(~0x7fffffffffffffffll)
N
N    /* maximum value of greatest-width signed integer type */
N#define INTMAX_MAX  __ESCAPE__(9223372036854775807ll)
N
N    /* maximum value of greatest-width unsigned integer type */
N#define UINTMAX_MAX __ESCAPE__(18446744073709551615ull)
N
N    /* 7.18.3 */
N
N    /* limits of ptrdiff_t */
N#if __sizeof_ptr == 8
X#if 4 == 8
S#define PTRDIFF_MIN INT64_MIN
S#define PTRDIFF_MAX INT64_MAX
N#else
N#define PTRDIFF_MIN INT32_MIN
N#define PTRDIFF_MAX INT32_MAX
N#endif
N
N    /* limits of sig_atomic_t */
N#define SIG_ATOMIC_MIN (~0x7fffffff)
N#define SIG_ATOMIC_MAX   2147483647
N
N    /* limit of size_t */
N#if __sizeof_ptr == 8
X#if 4 == 8
S#define SIZE_MAX UINT64_MAX
N#else
N#define SIZE_MAX UINT32_MAX
N#endif
N
N    /* limits of wchar_t */
N    /* NB we have to undef and redef because they're defined in both
N     * stdint.h and wchar.h */
N#undef WCHAR_MIN
N#undef WCHAR_MAX
N
N#if defined(__WCHAR32) || (defined(__ARM_SIZEOF_WCHAR_T) && __ARM_SIZEOF_WCHAR_T == 4)
X#if 0L || (0L && __ARM_SIZEOF_WCHAR_T == 4)
S  #define WCHAR_MIN   0
S  #define WCHAR_MAX   0xffffffffU
N#else
N  #define WCHAR_MIN   0
N  #define WCHAR_MAX   65535
N#endif
N
N    /* limits of wint_t */
N#define WINT_MIN (~0x7fffffff)
N#define WINT_MAX 2147483647
N
N#endif /* __STDC_LIMIT_MACROS */
N
N#if !defined(__cplusplus) || defined(__STDC_CONSTANT_MACROS)
X#if !0L || 0L
N
N    /* 7.18.4.1 macros for minimum-width integer constants */
N#define INT8_C(x)   (x)
N#define INT16_C(x)  (x)
N#define INT32_C(x)  (x)
N#define INT64_C(x)  __INT64_C(x)
N
N#define UINT8_C(x)  (x ## u)
N#define UINT16_C(x) (x ## u)
N#define UINT32_C(x) (x ## u)
N#define UINT64_C(x) __UINT64_C(x)
N
N    /* 7.18.4.2 macros for greatest-width integer constants */
N#define INTMAX_C(x)  __ESCAPE__(x ## ll)
N#define UINTMAX_C(x) __ESCAPE__(x ## ull)
N
N#endif /* __STDC_CONSTANT_MACROS */
N
N    #ifdef __cplusplus
S         }  /* extern "C" */
S      }  /* namespace std */
N    #endif /* __cplusplus */
N  #endif /* __STDINT_DECLS */
N
N  #ifdef __cplusplus
S    #ifndef __STDINT_NO_EXPORTS
S      using ::std::int8_t;
S      using ::std::int16_t;
S      using ::std::int32_t;
S      using ::std::int64_t;
S      using ::std::uint8_t;
S      using ::std::uint16_t;
S      using ::std::uint32_t;
S      using ::std::uint64_t;
S      using ::std::int_least8_t;
S      using ::std::int_least16_t;
S      using ::std::int_least32_t;
S      using ::std::int_least64_t;
S      using ::std::uint_least8_t;
S      using ::std::uint_least16_t;
S      using ::std::uint_least32_t;
S      using ::std::uint_least64_t;
S      using ::std::int_fast8_t;
S      using ::std::int_fast16_t;
S      using ::std::int_fast32_t;
S      using ::std::int_fast64_t;
S      using ::std::uint_fast8_t;
S      using ::std::uint_fast16_t;
S      using ::std::uint_fast32_t;
S      using ::std::uint_fast64_t;
S      using ::std::intptr_t;
S      using ::std::uintptr_t;
S      using ::std::intmax_t;
S      using ::std::uintmax_t;
S    #endif
N  #endif /* __cplusplus */
N
N#undef __INT64
N#undef __LONGLONG
N
N#endif /* __stdint_h */
N
N/* end of stdint.h */
L 4 ".\midi.h" 2
N
Ntypedef enum {
N	MIDI_C0		=	12,
N	MIDI_CS0	=	13,
N	MIDI_D0		=	14,
N	MIDI_DS0	=	15,
N	MIDI_E0		=	16,
N	MIDI_F0		=	17,
N	MIDI_FS0	=	18,
N	MIDI_G0		=	19,
N	MIDI_GS0	=	20,
N	MIDI_A0		=	21,
N	MIDI_AS0	=	22,
N	MIDI_B0		=	23,
N	MIDI_C1		=	24,
N	MIDI_CS1	=	25,
N	MIDI_D1		=	26,
N	MIDI_DS1	=	27,
N	MIDI_E1		=	28,
N	MIDI_F1		=	29,
N	MIDI_FS1	=	30,
N	MIDI_G1		=	31,
N	MIDI_GS1	=	32,
N	MIDI_A1		=	33,
N	MIDI_AS1	=	34,
N	MIDI_B1		=	35,
N	MIDI_C2		=	36,
N	MIDI_CS2	=	37,
N	MIDI_D2		=	38,
N	MIDI_DS2	=	39,
N	MIDI_E2		=	40,
N	MIDI_F2		=	41,
N	MIDI_FS2	=	42,
N	MIDI_G2		=	43,
N	MIDI_GS2	=	44,
N	MIDI_A2		=	45,
N	MIDI_AS2	=	46,
N	MIDI_B2		=	47,
N	MIDI_C3		=	48,
N	MIDI_CS3	=	49,
N	MIDI_D3		=	50,
N	MIDI_DS3	=	51,
N	MIDI_E3		=	52,
N	MIDI_F3		=	53,
N	MIDI_FS3	=	54,
N	MIDI_G3		=	55,
N	MIDI_GS3	=	56,
N	MIDI_A3		=	57,
N	MIDI_AS3	=	58,
N	MIDI_B3		=	59,
N	MIDI_C4		=	60,
N	MIDI_CS4	=	61,
N	MIDI_D4		=	62,
N	MIDI_DS4	=	63,
N	MIDI_E4		=	64,
N	MIDI_F4		=	65,
N	MIDI_FS4	=	66,
N	MIDI_G4		=	67,
N	MIDI_GS4	=	68,
N	MIDI_A4		=	69,
N	MIDI_AS4	=	70,
N	MIDI_B4		=	71,
N	MIDI_C5		=	72,
N	MIDI_CS5	=	73,
N	MIDI_D5		=	74,
N	MIDI_DS5	=	75,
N	MIDI_E5		=	76,
N	MIDI_F5		=	77,
N	MIDI_FS5	=	78,
N	MIDI_G5		=	79,
N	MIDI_GS5	=	80,
N	MIDI_A5		=	81,
N	MIDI_AS5	=	82,
N	MIDI_B5		=	83,
N	MIDI_C6		=	84,
N	MIDI_CS6	=	85,
N	MIDI_D6		=	86,
N	MIDI_DS6	=	87,
N	MIDI_E6		=	88,
N	MIDI_F6		=	89,
N	MIDI_FS6	=	90,
N	MIDI_G6		=	91,
N	MIDI_GS6	=	92,
N	MIDI_A6		=	93,
N	MIDI_AS6	=	94,
N	MIDI_B6		=	95,
N	MIDI_C7		=	96,
N	MIDI_CS7	=	97,
N	MIDI_D7		=	98,
N	MIDI_DS7	=	99,
N	MIDI_E7		=	100,
N	MIDI_F7		=	101,
N	MIDI_FS7	=	102,
N	MIDI_G7		=	103,
N	MIDI_GS7	=	104,
N	MIDI_A7		=	105,
N	MIDI_AS7	=	106,
N	MIDI_B7		=	107,
N	MIDI_C8		=	108,
N	MIDI_CS8	=	109,
N	MIDI_D8		=	110,
N	MIDI_DS8	=	111,
N	MIDI_E8		=	112,
N	MIDI_F8		=	113,
N	MIDI_FS8	=	114,
N	MIDI_G8		=	115,
N	MIDI_GS8	=	116,
N	MIDI_A8		=	117,
N	MIDI_AS8	=	118,
N	MIDI_B8		=	119
N
N} MidiNotes_t;
N
Ntypedef enum MidiEventStatus
N{
N	NOTE_ON = 0x90,
N	NOTE_OFF = 0x80
N} EventStatus_t;
N
Ntypedef struct MidiNoteEvent
N{
N	int16_t deltaTime;
N	uint8_t	status;
N	uint8_t key;
N	uint8_t velocity;
N} MidiNoteEvent_t;
N
Ntypedef struct  
N{
N	const MidiNoteEvent_t* notes;
N} MidiTrack_t;
N
N
Ntypedef struct 
N{
N	int	numTracks;
N	const MidiTrack_t* tracks;
N} MidiFile_t;
N
N
Nextern const uint16_t Midi_NotePwmPeriods[]; 
N
N		
L 3 "midifile\visual-studio\Debug\midi-tune.c" 2
Nstatic MidiNoteEvent_t track1Notes_[]={
N	{0, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{47, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{190, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{190, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{47, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{190, 0x90, 79, 64},
N	{95, 0x80, 79, 64},
N	{1047, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{333, 0x90, 67, 64},
N	{95, 0x80, 67, 64},
N	{333, 0x90, 64, 64},
N	{95, 0x80, 64, 64},
N	{333, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{190, 0x90, 71, 64},
N	{95, 0x80, 71, 64},
N	{190, 0x90, 70, 64},
N	{95, 0x80, 70, 64},
N	{47, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{190, 0x90, 67, 64},
N	{95, 0x80, 67, 64},
N	{95, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{95, 0x90, 79, 64},
N	{95, 0x80, 79, 64},
N	{95, 0x90, 81, 64},
N	{95, 0x80, 81, 64},
N	{190, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{47, 0x90, 79, 64},
N	{95, 0x80, 79, 64},
N	{190, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{190, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{47, 0x90, 74, 64},
N	{95, 0x80, 74, 64},
N	{47, 0x90, 71, 64},
N	{95, 0x80, 71, 64},
N	{333, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{333, 0x90, 67, 64},
N	{95, 0x80, 67, 64},
N	{333, 0x90, 64, 64},
N	{95, 0x80, 64, 64},
N	{333, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{190, 0x90, 71, 64},
N	{95, 0x80, 71, 64},
N	{190, 0x90, 70, 64},
N	{95, 0x80, 70, 64},
N	{47, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{190, 0x90, 67, 64},
N	{95, 0x80, 67, 64},
N	{95, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{95, 0x90, 79, 64},
N	{95, 0x80, 79, 64},
N	{95, 0x90, 81, 64},
N	{95, 0x80, 81, 64},
N	{190, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{47, 0x90, 79, 64},
N	{95, 0x80, 79, 64},
N	{190, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{190, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{47, 0x90, 74, 64},
N	{95, 0x80, 74, 64},
N	{47, 0x90, 71, 64},
N	{95, 0x80, 71, 64},
N	{619, 0x90, 79, 64},
N	{95, 0x80, 79, 64},
N	{47, 0x90, 78, 64},
N	{95, 0x80, 78, 64},
N	{47, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{47, 0x90, 75, 64},
N	{95, 0x80, 75, 64},
N	{190, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{190, 0x90, 68, 64},
N	{95, 0x80, 68, 64},
N	{47, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{47, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{190, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{47, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{47, 0x90, 74, 64},
N	{95, 0x80, 74, 64},
N	{333, 0x90, 79, 64},
N	{95, 0x80, 79, 64},
N	{47, 0x90, 78, 64},
N	{95, 0x80, 78, 64},
N	{47, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{47, 0x90, 75, 64},
N	{95, 0x80, 75, 64},
N	{190, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{190, 0x90, 84, 64},
N	{95, 0x80, 84, 64},
N	{190, 0x90, 84, 64},
N	{95, 0x80, 84, 64},
N	{47, 0x90, 84, 64},
N	{95, 0x80, 84, 64},
N	{761, 0x90, 79, 64},
N	{95, 0x80, 79, 64},
N	{47, 0x90, 78, 64},
N	{95, 0x80, 78, 64},
N	{47, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{47, 0x90, 75, 64},
N	{95, 0x80, 75, 64},
N	{190, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{190, 0x90, 68, 64},
N	{95, 0x80, 68, 64},
N	{47, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{47, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{190, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{47, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{47, 0x90, 74, 64},
N	{95, 0x80, 74, 64},
N	{333, 0x90, 75, 64},
N	{95, 0x80, 75, 64},
N	{333, 0x90, 74, 64},
N	{95, 0x80, 74, 64},
N	{333, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{1333, 0x90, 79, 64},
N	{95, 0x80, 79, 64},
N	{47, 0x90, 78, 64},
N	{95, 0x80, 78, 64},
N	{47, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{47, 0x90, 75, 64},
N	{95, 0x80, 75, 64},
N	{190, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{190, 0x90, 68, 64},
N	{95, 0x80, 68, 64},
N	{47, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{47, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{190, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{47, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{47, 0x90, 74, 64},
N	{95, 0x80, 74, 64},
N	{333, 0x90, 79, 64},
N	{95, 0x80, 79, 64},
N	{47, 0x90, 78, 64},
N	{95, 0x80, 78, 64},
N	{47, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{47, 0x90, 75, 64},
N	{95, 0x80, 75, 64},
N	{190, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{190, 0x90, 84, 64},
N	{95, 0x80, 84, 64},
N	{190, 0x90, 84, 64},
N	{95, 0x80, 84, 64},
N	{47, 0x90, 84, 64},
N	{95, 0x80, 84, 64},
N	{761, 0x90, 79, 64},
N	{95, 0x80, 79, 64},
N	{47, 0x90, 78, 64},
N	{95, 0x80, 78, 64},
N	{47, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{47, 0x90, 75, 64},
N	{95, 0x80, 75, 64},
N	{190, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{190, 0x90, 68, 64},
N	{95, 0x80, 68, 64},
N	{47, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{47, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{190, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{47, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{47, 0x90, 74, 64},
N	{95, 0x80, 74, 64},
N	{333, 0x90, 75, 64},
N	{95, 0x80, 75, 64},
N	{333, 0x90, 74, 64},
N	{95, 0x80, 74, 64},
N	{333, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{1047, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{47, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{190, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{190, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{47, 0x90, 74, 64},
N	{95, 0x80, 74, 64},
N	{190, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{47, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{190, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{47, 0x90, 67, 64},
N	{95, 0x80, 67, 64},
N	{476, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{47, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{190, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{190, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{47, 0x90, 74, 64},
N	{95, 0x80, 74, 64},
N	{47, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{1190, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{47, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{190, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{190, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{47, 0x90, 74, 64},
N	{95, 0x80, 74, 64},
N	{190, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{47, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{190, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{47, 0x90, 67, 64},
N	{95, 0x80, 67, 64},
N	{476, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{47, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{190, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{190, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{47, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{190, 0x90, 79, 64},
N	{95, 0x80, 79, 64},
N	{1047, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{333, 0x90, 67, 64},
N	{95, 0x80, 67, 64},
N	{333, 0x90, 64, 64},
N	{95, 0x80, 64, 64},
N	{333, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{190, 0x90, 71, 64},
N	{95, 0x80, 71, 64},
N	{190, 0x90, 70, 64},
N	{95, 0x80, 70, 64},
N	{47, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{190, 0x90, 67, 64},
N	{95, 0x80, 67, 64},
N	{95, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{95, 0x90, 79, 64},
N	{95, 0x80, 79, 64},
N	{95, 0x90, 81, 64},
N	{95, 0x80, 81, 64},
N	{190, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{47, 0x90, 79, 64},
N	{95, 0x80, 79, 64},
N	{190, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{190, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{47, 0x90, 74, 64},
N	{95, 0x80, 74, 64},
N	{47, 0x90, 71, 64},
N	{95, 0x80, 71, 64},
N	{333, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{333, 0x90, 67, 64},
N	{95, 0x80, 67, 64},
N	{333, 0x90, 64, 64},
N	{95, 0x80, 64, 64},
N	{333, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{190, 0x90, 71, 64},
N	{95, 0x80, 71, 64},
N	{190, 0x90, 70, 64},
N	{95, 0x80, 70, 64},
N	{47, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{190, 0x90, 67, 64},
N	{95, 0x80, 67, 64},
N	{95, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{95, 0x90, 79, 64},
N	{95, 0x80, 79, 64},
N	{95, 0x90, 81, 64},
N	{95, 0x80, 81, 64},
N	{190, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{47, 0x90, 79, 64},
N	{95, 0x80, 79, 64},
N	{190, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{190, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{47, 0x90, 74, 64},
N	{95, 0x80, 74, 64},
N	{47, 0x90, 71, 64},
N	{95, 0x80, 71, 64},
N	{333, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{47, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{190, 0x90, 67, 64},
N	{95, 0x80, 67, 64},
N	{333, 0x90, 68, 64},
N	{95, 0x80, 68, 64},
N	{190, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{47, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{190, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{47, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{476, 0x90, 71, 64},
N	{95, 0x80, 71, 64},
N	{95, 0x90, 81, 64},
N	{95, 0x80, 81, 64},
N	{95, 0x90, 81, 64},
N	{95, 0x80, 81, 64},
N	{95, 0x90, 81, 64},
N	{95, 0x80, 81, 64},
N	{95, 0x90, 79, 64},
N	{95, 0x80, 79, 64},
N	{95, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{95, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{47, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{190, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{47, 0x90, 67, 64},
N	{95, 0x80, 67, 64},
N	{476, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{47, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{190, 0x90, 67, 64},
N	{95, 0x80, 67, 64},
N	{333, 0x90, 68, 64},
N	{95, 0x80, 68, 64},
N	{190, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{47, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{190, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{47, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{476, 0x90, 71, 64},
N	{95, 0x80, 71, 64},
N	{47, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{190, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{47, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{95, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{95, 0x90, 74, 64},
N	{95, 0x80, 74, 64},
N	{95, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{1047, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{47, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{190, 0x90, 67, 64},
N	{95, 0x80, 67, 64},
N	{333, 0x90, 68, 64},
N	{95, 0x80, 68, 64},
N	{190, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{47, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{190, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{47, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{476, 0x90, 71, 64},
N	{95, 0x80, 71, 64},
N	{95, 0x90, 81, 64},
N	{95, 0x80, 81, 64},
N	{95, 0x90, 81, 64},
N	{95, 0x80, 81, 64},
N	{95, 0x90, 81, 64},
N	{95, 0x80, 81, 64},
N	{95, 0x90, 79, 64},
N	{95, 0x80, 79, 64},
N	{95, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{95, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{47, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{190, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{47, 0x90, 67, 64},
N	{95, 0x80, 67, 64},
N	{476, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{47, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{190, 0x90, 67, 64},
N	{95, 0x80, 67, 64},
N	{333, 0x90, 68, 64},
N	{95, 0x80, 68, 64},
N	{190, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{47, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{190, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{47, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{476, 0x90, 71, 64},
N	{95, 0x80, 71, 64},
N	{47, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{190, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{47, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{95, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{95, 0x90, 74, 64},
N	{95, 0x80, 74, 64},
N	{95, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{1047, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{47, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{190, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{190, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{47, 0x90, 74, 64},
N	{95, 0x80, 74, 64},
N	{190, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{47, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{190, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{47, 0x90, 67, 64},
N	{95, 0x80, 67, 64},
N	{476, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{47, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{190, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{190, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{47, 0x90, 74, 64},
N	{95, 0x80, 74, 64},
N	{47, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{1190, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{47, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{190, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{190, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{47, 0x90, 74, 64},
N	{95, 0x80, 74, 64},
N	{190, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{47, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{190, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{47, 0x90, 67, 64},
N	{95, 0x80, 67, 64},
N	{476, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{47, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{190, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{190, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{47, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{190, 0x90, 79, 64},
N	{95, 0x80, 79, 64},
N	{1047, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{47, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{190, 0x90, 67, 64},
N	{95, 0x80, 67, 64},
N	{333, 0x90, 68, 64},
N	{95, 0x80, 68, 64},
N	{190, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{47, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{190, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{47, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{476, 0x90, 71, 64},
N	{95, 0x80, 71, 64},
N	{95, 0x90, 81, 64},
N	{95, 0x80, 81, 64},
N	{95, 0x90, 81, 64},
N	{95, 0x80, 81, 64},
N	{95, 0x90, 81, 64},
N	{95, 0x80, 81, 64},
N	{95, 0x90, 79, 64},
N	{95, 0x80, 79, 64},
N	{95, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{95, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{47, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{190, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{47, 0x90, 67, 64},
N	{95, 0x80, 67, 64},
N	{476, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{47, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{190, 0x90, 67, 64},
N	{95, 0x80, 67, 64},
N	{333, 0x90, 68, 64},
N	{95, 0x80, 68, 64},
N	{190, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{47, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{190, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{47, 0x90, 69, 64},
N	{95, 0x80, 69, 64},
N	{476, 0x90, 71, 64},
N	{95, 0x80, 71, 64},
N	{47, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{190, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{47, 0x90, 77, 64},
N	{95, 0x80, 77, 64},
N	{95, 0x90, 76, 64},
N	{95, 0x80, 76, 64},
N	{95, 0x90, 74, 64},
N	{95, 0x80, 74, 64},
N	{95, 0x90, 72, 64},
N	{95, 0x80, 72, 64},
N	{-1, 0, 0}
N};
Nstatic MidiNoteEvent_t track2Notes_[]={
N	{0, 0x91, 66, 64},
N	{95, 0x81, 66, 64},
N	{47, 0x91, 66, 64},
N	{95, 0x81, 66, 64},
N	{190, 0x91, 66, 64},
N	{95, 0x81, 66, 64},
N	{190, 0x91, 66, 64},
N	{95, 0x81, 66, 64},
N	{47, 0x91, 66, 64},
N	{95, 0x81, 66, 64},
N	{190, 0x91, 71, 64},
N	{95, 0x81, 71, 64},
N	{476, 0x91, 67, 64},
N	{95, 0x81, 67, 64},
N	{476, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{333, 0x91, 60, 64},
N	{95, 0x81, 60, 64},
N	{333, 0x91, 55, 64},
N	{95, 0x81, 55, 64},
N	{333, 0x91, 60, 64},
N	{95, 0x81, 60, 64},
N	{190, 0x91, 62, 64},
N	{95, 0x81, 62, 64},
N	{190, 0x91, 61, 64},
N	{95, 0x81, 61, 64},
N	{47, 0x91, 60, 64},
N	{95, 0x81, 60, 64},
N	{190, 0x91, 60, 64},
N	{95, 0x81, 60, 64},
N	{95, 0x91, 67, 64},
N	{95, 0x81, 67, 64},
N	{95, 0x91, 71, 64},
N	{95, 0x81, 71, 64},
N	{95, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{190, 0x91, 69, 64},
N	{95, 0x81, 69, 64},
N	{47, 0x91, 71, 64},
N	{95, 0x81, 71, 64},
N	{190, 0x91, 69, 64},
N	{95, 0x81, 69, 64},
N	{190, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{47, 0x91, 65, 64},
N	{95, 0x81, 65, 64},
N	{47, 0x91, 62, 64},
N	{95, 0x81, 62, 64},
N	{333, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{333, 0x91, 60, 64},
N	{95, 0x81, 60, 64},
N	{333, 0x91, 55, 64},
N	{95, 0x81, 55, 64},
N	{333, 0x91, 60, 64},
N	{95, 0x81, 60, 64},
N	{190, 0x91, 62, 64},
N	{95, 0x81, 62, 64},
N	{190, 0x91, 61, 64},
N	{95, 0x81, 61, 64},
N	{47, 0x91, 60, 64},
N	{95, 0x81, 60, 64},
N	{190, 0x91, 60, 64},
N	{95, 0x81, 60, 64},
N	{95, 0x91, 67, 64},
N	{95, 0x81, 67, 64},
N	{95, 0x91, 71, 64},
N	{95, 0x81, 71, 64},
N	{95, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{190, 0x91, 69, 64},
N	{95, 0x81, 69, 64},
N	{47, 0x91, 71, 64},
N	{95, 0x81, 71, 64},
N	{190, 0x91, 69, 64},
N	{95, 0x81, 69, 64},
N	{190, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{47, 0x91, 65, 64},
N	{95, 0x81, 65, 64},
N	{47, 0x91, 62, 64},
N	{95, 0x81, 62, 64},
N	{619, 0x91, 76, 64},
N	{95, 0x81, 76, 64},
N	{47, 0x91, 75, 64},
N	{95, 0x81, 75, 64},
N	{47, 0x91, 74, 64},
N	{95, 0x81, 74, 64},
N	{47, 0x91, 71, 64},
N	{95, 0x81, 71, 64},
N	{190, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{190, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{47, 0x91, 65, 64},
N	{95, 0x81, 65, 64},
N	{47, 0x91, 67, 64},
N	{95, 0x81, 67, 64},
N	{190, 0x91, 60, 64},
N	{95, 0x81, 60, 64},
N	{47, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{47, 0x91, 65, 64},
N	{95, 0x81, 65, 64},
N	{333, 0x91, 76, 64},
N	{95, 0x81, 76, 64},
N	{47, 0x91, 75, 64},
N	{95, 0x81, 75, 64},
N	{47, 0x91, 74, 64},
N	{95, 0x81, 74, 64},
N	{47, 0x91, 71, 64},
N	{95, 0x81, 71, 64},
N	{190, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{190, 0x91, 77, 64},
N	{95, 0x81, 77, 64},
N	{190, 0x91, 77, 64},
N	{95, 0x81, 77, 64},
N	{47, 0x91, 77, 64},
N	{95, 0x81, 77, 64},
N	{761, 0x91, 76, 64},
N	{95, 0x81, 76, 64},
N	{47, 0x91, 75, 64},
N	{95, 0x81, 75, 64},
N	{47, 0x91, 74, 64},
N	{95, 0x81, 74, 64},
N	{47, 0x91, 71, 64},
N	{95, 0x81, 71, 64},
N	{190, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{190, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{47, 0x91, 65, 64},
N	{95, 0x81, 65, 64},
N	{47, 0x91, 67, 64},
N	{95, 0x81, 67, 64},
N	{190, 0x91, 60, 64},
N	{95, 0x81, 60, 64},
N	{47, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{47, 0x91, 65, 64},
N	{95, 0x81, 65, 64},
N	{333, 0x91, 68, 64},
N	{95, 0x81, 68, 64},
N	{333, 0x91, 65, 64},
N	{95, 0x81, 65, 64},
N	{333, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{1333, 0x91, 76, 64},
N	{95, 0x81, 76, 64},
N	{47, 0x91, 75, 64},
N	{95, 0x81, 75, 64},
N	{47, 0x91, 74, 64},
N	{95, 0x81, 74, 64},
N	{47, 0x91, 71, 64},
N	{95, 0x81, 71, 64},
N	{190, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{190, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{47, 0x91, 65, 64},
N	{95, 0x81, 65, 64},
N	{47, 0x91, 67, 64},
N	{95, 0x81, 67, 64},
N	{190, 0x91, 60, 64},
N	{95, 0x81, 60, 64},
N	{47, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{47, 0x91, 65, 64},
N	{95, 0x81, 65, 64},
N	{333, 0x91, 76, 64},
N	{95, 0x81, 76, 64},
N	{47, 0x91, 75, 64},
N	{95, 0x81, 75, 64},
N	{47, 0x91, 74, 64},
N	{95, 0x81, 74, 64},
N	{47, 0x91, 71, 64},
N	{95, 0x81, 71, 64},
N	{190, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{190, 0x91, 77, 64},
N	{95, 0x81, 77, 64},
N	{190, 0x91, 77, 64},
N	{95, 0x81, 77, 64},
N	{47, 0x91, 77, 64},
N	{95, 0x81, 77, 64},
N	{761, 0x91, 76, 64},
N	{95, 0x81, 76, 64},
N	{47, 0x91, 75, 64},
N	{95, 0x81, 75, 64},
N	{47, 0x91, 74, 64},
N	{95, 0x81, 74, 64},
N	{47, 0x91, 71, 64},
N	{95, 0x81, 71, 64},
N	{190, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{190, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{47, 0x91, 65, 64},
N	{95, 0x81, 65, 64},
N	{47, 0x91, 67, 64},
N	{95, 0x81, 67, 64},
N	{190, 0x91, 60, 64},
N	{95, 0x81, 60, 64},
N	{47, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{47, 0x91, 65, 64},
N	{95, 0x81, 65, 64},
N	{333, 0x91, 68, 64},
N	{95, 0x81, 68, 64},
N	{333, 0x91, 65, 64},
N	{95, 0x81, 65, 64},
N	{333, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{1047, 0x91, 68, 64},
N	{95, 0x81, 68, 64},
N	{47, 0x91, 68, 64},
N	{95, 0x81, 68, 64},
N	{190, 0x91, 68, 64},
N	{95, 0x81, 68, 64},
N	{190, 0x91, 68, 64},
N	{95, 0x81, 68, 64},
N	{47, 0x91, 70, 64},
N	{95, 0x81, 70, 64},
N	{190, 0x91, 67, 64},
N	{95, 0x81, 67, 64},
N	{47, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{190, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{47, 0x91, 60, 64},
N	{95, 0x81, 60, 64},
N	{476, 0x91, 68, 64},
N	{95, 0x81, 68, 64},
N	{47, 0x91, 68, 64},
N	{95, 0x81, 68, 64},
N	{190, 0x91, 68, 64},
N	{95, 0x81, 68, 64},
N	{190, 0x91, 68, 64},
N	{95, 0x81, 68, 64},
N	{47, 0x91, 70, 64},
N	{95, 0x81, 70, 64},
N	{47, 0x91, 67, 64},
N	{95, 0x81, 67, 64},
N	{1190, 0x91, 68, 64},
N	{95, 0x81, 68, 64},
N	{47, 0x91, 68, 64},
N	{95, 0x81, 68, 64},
N	{190, 0x91, 68, 64},
N	{95, 0x81, 68, 64},
N	{190, 0x91, 68, 64},
N	{95, 0x81, 68, 64},
N	{47, 0x91, 70, 64},
N	{95, 0x81, 70, 64},
N	{190, 0x91, 67, 64},
N	{95, 0x81, 67, 64},
N	{47, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{190, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{47, 0x91, 60, 64},
N	{95, 0x81, 60, 64},
N	{476, 0x91, 66, 64},
N	{95, 0x81, 66, 64},
N	{47, 0x91, 66, 64},
N	{95, 0x81, 66, 64},
N	{190, 0x91, 66, 64},
N	{95, 0x81, 66, 64},
N	{190, 0x91, 66, 64},
N	{95, 0x81, 66, 64},
N	{47, 0x91, 66, 64},
N	{95, 0x81, 66, 64},
N	{190, 0x91, 71, 64},
N	{95, 0x81, 71, 64},
N	{476, 0x91, 67, 64},
N	{95, 0x81, 67, 64},
N	{476, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{333, 0x91, 60, 64},
N	{95, 0x81, 60, 64},
N	{333, 0x91, 55, 64},
N	{95, 0x81, 55, 64},
N	{333, 0x91, 60, 64},
N	{95, 0x81, 60, 64},
N	{190, 0x91, 62, 64},
N	{95, 0x81, 62, 64},
N	{190, 0x91, 61, 64},
N	{95, 0x81, 61, 64},
N	{47, 0x91, 60, 64},
N	{95, 0x81, 60, 64},
N	{190, 0x91, 60, 64},
N	{95, 0x81, 60, 64},
N	{95, 0x91, 67, 64},
N	{95, 0x81, 67, 64},
N	{95, 0x91, 71, 64},
N	{95, 0x81, 71, 64},
N	{95, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{190, 0x91, 69, 64},
N	{95, 0x81, 69, 64},
N	{47, 0x91, 71, 64},
N	{95, 0x81, 71, 64},
N	{190, 0x91, 69, 64},
N	{95, 0x81, 69, 64},
N	{190, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{47, 0x91, 65, 64},
N	{95, 0x81, 65, 64},
N	{47, 0x91, 62, 64},
N	{95, 0x81, 62, 64},
N	{333, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{333, 0x91, 60, 64},
N	{95, 0x81, 60, 64},
N	{333, 0x91, 55, 64},
N	{95, 0x81, 55, 64},
N	{333, 0x91, 60, 64},
N	{95, 0x81, 60, 64},
N	{190, 0x91, 62, 64},
N	{95, 0x81, 62, 64},
N	{190, 0x91, 61, 64},
N	{95, 0x81, 61, 64},
N	{47, 0x91, 60, 64},
N	{95, 0x81, 60, 64},
N	{190, 0x91, 60, 64},
N	{95, 0x81, 60, 64},
N	{95, 0x91, 67, 64},
N	{95, 0x81, 67, 64},
N	{95, 0x91, 71, 64},
N	{95, 0x81, 71, 64},
N	{95, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{190, 0x91, 69, 64},
N	{95, 0x81, 69, 64},
N	{47, 0x91, 71, 64},
N	{95, 0x81, 71, 64},
N	{190, 0x91, 69, 64},
N	{95, 0x81, 69, 64},
N	{190, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{47, 0x91, 65, 64},
N	{95, 0x81, 65, 64},
N	{47, 0x91, 62, 64},
N	{95, 0x81, 62, 64},
N	{333, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{47, 0x91, 69, 64},
N	{95, 0x81, 69, 64},
N	{190, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{333, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{190, 0x91, 65, 64},
N	{95, 0x81, 65, 64},
N	{47, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{190, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{47, 0x91, 65, 64},
N	{95, 0x81, 65, 64},
N	{476, 0x91, 67, 64},
N	{95, 0x81, 67, 64},
N	{95, 0x91, 77, 64},
N	{95, 0x81, 77, 64},
N	{95, 0x91, 77, 64},
N	{95, 0x81, 77, 64},
N	{95, 0x91, 77, 64},
N	{95, 0x81, 77, 64},
N	{95, 0x91, 76, 64},
N	{95, 0x81, 76, 64},
N	{95, 0x91, 74, 64},
N	{95, 0x81, 74, 64},
N	{95, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{47, 0x91, 69, 64},
N	{95, 0x81, 69, 64},
N	{190, 0x91, 65, 64},
N	{95, 0x81, 65, 64},
N	{47, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{476, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{47, 0x91, 69, 64},
N	{95, 0x81, 69, 64},
N	{190, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{333, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{190, 0x91, 65, 64},
N	{95, 0x81, 65, 64},
N	{47, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{190, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{47, 0x91, 65, 64},
N	{95, 0x81, 65, 64},
N	{476, 0x91, 67, 64},
N	{95, 0x81, 67, 64},
N	{47, 0x91, 74, 64},
N	{95, 0x81, 74, 64},
N	{190, 0x91, 74, 64},
N	{95, 0x81, 74, 64},
N	{47, 0x91, 74, 64},
N	{95, 0x81, 74, 64},
N	{95, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{95, 0x91, 71, 64},
N	{95, 0x81, 71, 64},
N	{95, 0x91, 67, 64},
N	{95, 0x81, 67, 64},
N	{47, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{190, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{47, 0x91, 60, 64},
N	{95, 0x81, 60, 64},
N	{476, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{47, 0x91, 69, 64},
N	{95, 0x81, 69, 64},
N	{190, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{333, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{190, 0x91, 65, 64},
N	{95, 0x81, 65, 64},
N	{47, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{190, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{47, 0x91, 65, 64},
N	{95, 0x81, 65, 64},
N	{476, 0x91, 67, 64},
N	{95, 0x81, 67, 64},
N	{95, 0x91, 77, 64},
N	{95, 0x81, 77, 64},
N	{95, 0x91, 77, 64},
N	{95, 0x81, 77, 64},
N	{95, 0x91, 77, 64},
N	{95, 0x81, 77, 64},
N	{95, 0x91, 76, 64},
N	{95, 0x81, 76, 64},
N	{95, 0x91, 74, 64},
N	{95, 0x81, 74, 64},
N	{95, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{47, 0x91, 69, 64},
N	{95, 0x81, 69, 64},
N	{190, 0x91, 65, 64},
N	{95, 0x81, 65, 64},
N	{47, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{476, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{47, 0x91, 69, 64},
N	{95, 0x81, 69, 64},
N	{190, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{333, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{190, 0x91, 65, 64},
N	{95, 0x81, 65, 64},
N	{47, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{190, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{47, 0x91, 65, 64},
N	{95, 0x81, 65, 64},
N	{476, 0x91, 67, 64},
N	{95, 0x81, 67, 64},
N	{47, 0x91, 74, 64},
N	{95, 0x81, 74, 64},
N	{190, 0x91, 74, 64},
N	{95, 0x81, 74, 64},
N	{47, 0x91, 74, 64},
N	{95, 0x81, 74, 64},
N	{95, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{95, 0x91, 71, 64},
N	{95, 0x81, 71, 64},
N	{95, 0x91, 67, 64},
N	{95, 0x81, 67, 64},
N	{47, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{190, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{47, 0x91, 60, 64},
N	{95, 0x81, 60, 64},
N	{476, 0x91, 68, 64},
N	{95, 0x81, 68, 64},
N	{47, 0x91, 68, 64},
N	{95, 0x81, 68, 64},
N	{190, 0x91, 68, 64},
N	{95, 0x81, 68, 64},
N	{190, 0x91, 68, 64},
N	{95, 0x81, 68, 64},
N	{47, 0x91, 70, 64},
N	{95, 0x81, 70, 64},
N	{190, 0x91, 67, 64},
N	{95, 0x81, 67, 64},
N	{47, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{190, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{47, 0x91, 60, 64},
N	{95, 0x81, 60, 64},
N	{476, 0x91, 68, 64},
N	{95, 0x81, 68, 64},
N	{47, 0x91, 68, 64},
N	{95, 0x81, 68, 64},
N	{190, 0x91, 68, 64},
N	{95, 0x81, 68, 64},
N	{190, 0x91, 68, 64},
N	{95, 0x81, 68, 64},
N	{47, 0x91, 70, 64},
N	{95, 0x81, 70, 64},
N	{47, 0x91, 67, 64},
N	{95, 0x81, 67, 64},
N	{1190, 0x91, 68, 64},
N	{95, 0x81, 68, 64},
N	{47, 0x91, 68, 64},
N	{95, 0x81, 68, 64},
N	{190, 0x91, 68, 64},
N	{95, 0x81, 68, 64},
N	{190, 0x91, 68, 64},
N	{95, 0x81, 68, 64},
N	{47, 0x91, 70, 64},
N	{95, 0x81, 70, 64},
N	{190, 0x91, 67, 64},
N	{95, 0x81, 67, 64},
N	{47, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{190, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{47, 0x91, 60, 64},
N	{95, 0x81, 60, 64},
N	{476, 0x91, 66, 64},
N	{95, 0x81, 66, 64},
N	{47, 0x91, 66, 64},
N	{95, 0x81, 66, 64},
N	{190, 0x91, 66, 64},
N	{95, 0x81, 66, 64},
N	{190, 0x91, 66, 64},
N	{95, 0x81, 66, 64},
N	{47, 0x91, 66, 64},
N	{95, 0x81, 66, 64},
N	{190, 0x91, 71, 64},
N	{95, 0x81, 71, 64},
N	{476, 0x91, 67, 64},
N	{95, 0x81, 67, 64},
N	{476, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{47, 0x91, 69, 64},
N	{95, 0x81, 69, 64},
N	{190, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{333, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{190, 0x91, 65, 64},
N	{95, 0x81, 65, 64},
N	{47, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{190, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{47, 0x91, 65, 64},
N	{95, 0x81, 65, 64},
N	{476, 0x91, 67, 64},
N	{95, 0x81, 67, 64},
N	{95, 0x91, 77, 64},
N	{95, 0x81, 77, 64},
N	{95, 0x91, 77, 64},
N	{95, 0x81, 77, 64},
N	{95, 0x91, 77, 64},
N	{95, 0x81, 77, 64},
N	{95, 0x91, 76, 64},
N	{95, 0x81, 76, 64},
N	{95, 0x91, 74, 64},
N	{95, 0x81, 74, 64},
N	{95, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{47, 0x91, 69, 64},
N	{95, 0x81, 69, 64},
N	{190, 0x91, 65, 64},
N	{95, 0x81, 65, 64},
N	{47, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{476, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{47, 0x91, 69, 64},
N	{95, 0x81, 69, 64},
N	{190, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{333, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{190, 0x91, 65, 64},
N	{95, 0x81, 65, 64},
N	{47, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{190, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{47, 0x91, 65, 64},
N	{95, 0x81, 65, 64},
N	{476, 0x91, 67, 64},
N	{95, 0x81, 67, 64},
N	{47, 0x91, 74, 64},
N	{95, 0x81, 74, 64},
N	{190, 0x91, 74, 64},
N	{95, 0x81, 74, 64},
N	{47, 0x91, 74, 64},
N	{95, 0x81, 74, 64},
N	{95, 0x91, 72, 64},
N	{95, 0x81, 72, 64},
N	{95, 0x91, 71, 64},
N	{95, 0x81, 71, 64},
N	{95, 0x91, 67, 64},
N	{95, 0x81, 67, 64},
N	{47, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{190, 0x91, 64, 64},
N	{95, 0x81, 64, 64},
N	{47, 0x91, 60, 64},
N	{95, 0x81, 60, 64},
N	{-1, 0, 0}
N};
Nstatic MidiNoteEvent_t track3Notes_[]={
N	{0, 0x92, 50, 64},
N	{95, 0x82, 50, 64},
N	{47, 0x92, 50, 64},
N	{95, 0x82, 50, 64},
N	{190, 0x92, 50, 64},
N	{95, 0x82, 50, 64},
N	{190, 0x92, 50, 64},
N	{95, 0x82, 50, 64},
N	{47, 0x92, 50, 64},
N	{95, 0x82, 50, 64},
N	{190, 0x92, 67, 64},
N	{95, 0x82, 67, 64},
N	{476, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{476, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{333, 0x92, 52, 64},
N	{95, 0x82, 52, 64},
N	{333, 0x92, 48, 64},
N	{95, 0x82, 48, 64},
N	{333, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 54, 64},
N	{95, 0x82, 54, 64},
N	{47, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 52, 64},
N	{95, 0x82, 52, 64},
N	{95, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{95, 0x92, 64, 64},
N	{95, 0x82, 64, 64},
N	{95, 0x92, 65, 64},
N	{95, 0x82, 65, 64},
N	{190, 0x92, 62, 64},
N	{95, 0x82, 62, 64},
N	{47, 0x92, 64, 64},
N	{95, 0x82, 64, 64},
N	{190, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{190, 0x92, 57, 64},
N	{95, 0x82, 57, 64},
N	{47, 0x92, 59, 64},
N	{95, 0x82, 59, 64},
N	{47, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{333, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{333, 0x92, 52, 64},
N	{95, 0x82, 52, 64},
N	{333, 0x92, 48, 64},
N	{95, 0x82, 48, 64},
N	{333, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 54, 64},
N	{95, 0x82, 54, 64},
N	{47, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 52, 64},
N	{95, 0x82, 52, 64},
N	{95, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{95, 0x92, 64, 64},
N	{95, 0x82, 64, 64},
N	{95, 0x92, 65, 64},
N	{95, 0x82, 65, 64},
N	{190, 0x92, 62, 64},
N	{95, 0x82, 62, 64},
N	{47, 0x92, 64, 64},
N	{95, 0x82, 64, 64},
N	{190, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{190, 0x92, 57, 64},
N	{95, 0x82, 57, 64},
N	{47, 0x92, 59, 64},
N	{95, 0x82, 59, 64},
N	{47, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{333, 0x92, 48, 64},
N	{95, 0x82, 48, 64},
N	{333, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{333, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{190, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{333, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{47, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{190, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 48, 64},
N	{95, 0x82, 48, 64},
N	{333, 0x92, 52, 64},
N	{95, 0x82, 52, 64},
N	{333, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{47, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{190, 0x92, 79, 64},
N	{95, 0x82, 79, 64},
N	{190, 0x92, 79, 64},
N	{95, 0x82, 79, 64},
N	{47, 0x92, 79, 64},
N	{95, 0x82, 79, 64},
N	{190, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 48, 64},
N	{95, 0x82, 48, 64},
N	{333, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{333, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{190, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{333, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{47, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{190, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 48, 64},
N	{95, 0x82, 48, 64},
N	{190, 0x92, 56, 64},
N	{95, 0x82, 56, 64},
N	{333, 0x92, 58, 64},
N	{95, 0x82, 58, 64},
N	{333, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{333, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{47, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 48, 64},
N	{95, 0x82, 48, 64},
N	{190, 0x92, 48, 64},
N	{95, 0x82, 48, 64},
N	{333, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{333, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{190, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{333, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{47, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{190, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 48, 64},
N	{95, 0x82, 48, 64},
N	{333, 0x92, 52, 64},
N	{95, 0x82, 52, 64},
N	{333, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{47, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{190, 0x92, 79, 64},
N	{95, 0x82, 79, 64},
N	{190, 0x92, 79, 64},
N	{95, 0x82, 79, 64},
N	{47, 0x92, 79, 64},
N	{95, 0x82, 79, 64},
N	{190, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 48, 64},
N	{95, 0x82, 48, 64},
N	{333, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{333, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{190, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{333, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{47, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{190, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 48, 64},
N	{95, 0x82, 48, 64},
N	{190, 0x92, 56, 64},
N	{95, 0x82, 56, 64},
N	{333, 0x92, 58, 64},
N	{95, 0x82, 58, 64},
N	{333, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{333, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{47, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 48, 64},
N	{95, 0x82, 48, 64},
N	{190, 0x92, 44, 64},
N	{95, 0x82, 44, 64},
N	{333, 0x92, 51, 64},
N	{95, 0x82, 51, 64},
N	{333, 0x92, 56, 64},
N	{95, 0x82, 56, 64},
N	{190, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{333, 0x92, 48, 64},
N	{95, 0x82, 48, 64},
N	{333, 0x92, 43, 64},
N	{95, 0x82, 43, 64},
N	{190, 0x92, 44, 64},
N	{95, 0x82, 44, 64},
N	{333, 0x92, 51, 64},
N	{95, 0x82, 51, 64},
N	{333, 0x92, 56, 64},
N	{95, 0x82, 56, 64},
N	{190, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{333, 0x92, 48, 64},
N	{95, 0x82, 48, 64},
N	{333, 0x92, 43, 64},
N	{95, 0x82, 43, 64},
N	{190, 0x92, 44, 64},
N	{95, 0x82, 44, 64},
N	{333, 0x92, 51, 64},
N	{95, 0x82, 51, 64},
N	{333, 0x92, 56, 64},
N	{95, 0x82, 56, 64},
N	{190, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{333, 0x92, 48, 64},
N	{95, 0x82, 48, 64},
N	{333, 0x92, 43, 64},
N	{95, 0x82, 43, 64},
N	{190, 0x92, 50, 64},
N	{95, 0x82, 50, 64},
N	{47, 0x92, 50, 64},
N	{95, 0x82, 50, 64},
N	{190, 0x92, 50, 64},
N	{95, 0x82, 50, 64},
N	{190, 0x92, 50, 64},
N	{95, 0x82, 50, 64},
N	{47, 0x92, 50, 64},
N	{95, 0x82, 50, 64},
N	{190, 0x92, 67, 64},
N	{95, 0x82, 67, 64},
N	{476, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{476, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{333, 0x92, 52, 64},
N	{95, 0x82, 52, 64},
N	{333, 0x92, 48, 64},
N	{95, 0x82, 48, 64},
N	{333, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 54, 64},
N	{95, 0x82, 54, 64},
N	{47, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 52, 64},
N	{95, 0x82, 52, 64},
N	{95, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{95, 0x92, 64, 64},
N	{95, 0x82, 64, 64},
N	{95, 0x92, 65, 64},
N	{95, 0x82, 65, 64},
N	{190, 0x92, 62, 64},
N	{95, 0x82, 62, 64},
N	{47, 0x92, 64, 64},
N	{95, 0x82, 64, 64},
N	{190, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{190, 0x92, 57, 64},
N	{95, 0x82, 57, 64},
N	{47, 0x92, 59, 64},
N	{95, 0x82, 59, 64},
N	{47, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{333, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{333, 0x92, 52, 64},
N	{95, 0x82, 52, 64},
N	{333, 0x92, 48, 64},
N	{95, 0x82, 48, 64},
N	{333, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 54, 64},
N	{95, 0x82, 54, 64},
N	{47, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 52, 64},
N	{95, 0x82, 52, 64},
N	{95, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{95, 0x92, 64, 64},
N	{95, 0x82, 64, 64},
N	{95, 0x92, 65, 64},
N	{95, 0x82, 65, 64},
N	{190, 0x92, 62, 64},
N	{95, 0x82, 62, 64},
N	{47, 0x92, 64, 64},
N	{95, 0x82, 64, 64},
N	{190, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{190, 0x92, 57, 64},
N	{95, 0x82, 57, 64},
N	{47, 0x92, 59, 64},
N	{95, 0x82, 59, 64},
N	{47, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{333, 0x92, 48, 64},
N	{95, 0x82, 48, 64},
N	{333, 0x92, 54, 64},
N	{95, 0x82, 54, 64},
N	{47, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{190, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{47, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{47, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 50, 64},
N	{95, 0x82, 50, 64},
N	{333, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{47, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 59, 64},
N	{95, 0x82, 59, 64},
N	{190, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{47, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{47, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 48, 64},
N	{95, 0x82, 48, 64},
N	{333, 0x92, 54, 64},
N	{95, 0x82, 54, 64},
N	{47, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{190, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{47, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{47, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{47, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{47, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{95, 0x92, 57, 64},
N	{95, 0x82, 57, 64},
N	{95, 0x92, 59, 64},
N	{95, 0x82, 59, 64},
N	{95, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{190, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 48, 64},
N	{95, 0x82, 48, 64},
N	{476, 0x92, 48, 64},
N	{95, 0x82, 48, 64},
N	{333, 0x92, 54, 64},
N	{95, 0x82, 54, 64},
N	{47, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{190, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{47, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{47, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 50, 64},
N	{95, 0x82, 50, 64},
N	{333, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{47, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 59, 64},
N	{95, 0x82, 59, 64},
N	{190, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{47, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{47, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 48, 64},
N	{95, 0x82, 48, 64},
N	{333, 0x92, 54, 64},
N	{95, 0x82, 54, 64},
N	{47, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{190, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{47, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{47, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{47, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{47, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{95, 0x92, 57, 64},
N	{95, 0x82, 57, 64},
N	{95, 0x92, 59, 64},
N	{95, 0x82, 59, 64},
N	{95, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{190, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 48, 64},
N	{95, 0x82, 48, 64},
N	{476, 0x92, 44, 64},
N	{95, 0x82, 44, 64},
N	{333, 0x92, 51, 64},
N	{95, 0x82, 51, 64},
N	{333, 0x92, 56, 64},
N	{95, 0x82, 56, 64},
N	{190, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{333, 0x92, 48, 64},
N	{95, 0x82, 48, 64},
N	{333, 0x92, 43, 64},
N	{95, 0x82, 43, 64},
N	{190, 0x92, 44, 64},
N	{95, 0x82, 44, 64},
N	{333, 0x92, 51, 64},
N	{95, 0x82, 51, 64},
N	{333, 0x92, 56, 64},
N	{95, 0x82, 56, 64},
N	{190, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{333, 0x92, 48, 64},
N	{95, 0x82, 48, 64},
N	{333, 0x92, 43, 64},
N	{95, 0x82, 43, 64},
N	{190, 0x92, 44, 64},
N	{95, 0x82, 44, 64},
N	{333, 0x92, 51, 64},
N	{95, 0x82, 51, 64},
N	{333, 0x92, 56, 64},
N	{95, 0x82, 56, 64},
N	{190, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{333, 0x92, 48, 64},
N	{95, 0x82, 48, 64},
N	{333, 0x92, 43, 64},
N	{95, 0x82, 43, 64},
N	{190, 0x92, 50, 64},
N	{95, 0x82, 50, 64},
N	{47, 0x92, 50, 64},
N	{95, 0x82, 50, 64},
N	{190, 0x92, 50, 64},
N	{95, 0x82, 50, 64},
N	{190, 0x92, 50, 64},
N	{95, 0x82, 50, 64},
N	{47, 0x92, 50, 64},
N	{95, 0x82, 50, 64},
N	{190, 0x92, 67, 64},
N	{95, 0x82, 67, 64},
N	{476, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{476, 0x92, 48, 64},
N	{95, 0x82, 48, 64},
N	{333, 0x92, 54, 64},
N	{95, 0x82, 54, 64},
N	{47, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{190, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{47, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{47, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 50, 64},
N	{95, 0x82, 50, 64},
N	{333, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{47, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 59, 64},
N	{95, 0x82, 59, 64},
N	{190, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{47, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{47, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 48, 64},
N	{95, 0x82, 48, 64},
N	{333, 0x92, 54, 64},
N	{95, 0x82, 54, 64},
N	{47, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{190, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{47, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{47, 0x92, 53, 64},
N	{95, 0x82, 53, 64},
N	{190, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{47, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{47, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{95, 0x92, 57, 64},
N	{95, 0x82, 57, 64},
N	{95, 0x92, 59, 64},
N	{95, 0x82, 59, 64},
N	{95, 0x92, 60, 64},
N	{95, 0x82, 60, 64},
N	{190, 0x92, 55, 64},
N	{95, 0x82, 55, 64},
N	{190, 0x92, 48, 64},
N	{95, 0x82, 48, 64},
N	{-1, 0, 0}
N};
N
Nstatic MidiTrack_t tracks_[] = {track1Notes_, track2Notes_, track3Notes_};
NMidiFile_t midi_tune = {3, tracks_};
